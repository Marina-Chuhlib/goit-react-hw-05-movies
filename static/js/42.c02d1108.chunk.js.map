{"version":3,"file":"static/js/42.c02d1108.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/pages/MovieDetailsPage/MovieDetailsPage.module.css?9108","pages/MovieDetailsPage/MovieDetailsPage.jsx","shared/services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"MovieDetailsPage_wrapper__TH-Xi\",\"button\":\"MovieDetailsPage_button__mSHH6\",\"icon\":\"MovieDetailsPage_icon__PTpsZ\",\"title\":\"MovieDetailsPage_title__63V3V\",\"img\":\"MovieDetailsPage_img__+Nbrw\",\"info\":\"MovieDetailsPage_info__wQ8PP\",\"topic\":\"MovieDetailsPage_topic__XiARy\",\"list\":\"MovieDetailsPage_list__xeLC8\",\"wrapperLink\":\"MovieDetailsPage_wrapperLink__m8P4T\",\"buttonLink\":\"MovieDetailsPage_buttonLink__2NjbM\",\"link\":\"MovieDetailsPage_link__rhdjc\"};","import { useState, useEffect } from 'react';\nimport {\n  useParams,\n  useNavigate,\n  Link,\n  Outlet,\n  useLocation,\n} from 'react-router-dom';\n\nimport { getMovieDetails } from '../../shared/services/api';\nimport Loader from '../../shared/components/Loader/Loader';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport css from './MovieDetailsPage.module.css';\n\nimport { MdKeyboardBackspace } from 'react-icons/md';\n\nconst MovieDetailsPage = () => {\n  const [movie, setMovie] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [genres, setGenres] = useState([]);\n  const [date, setDate] = useState('');\n\n  const { movieId } = useParams();\n\n  const navigate = useNavigate();\n\n  const location = useLocation();\n  const from = location.state?.from || '/movies';\n  // console.log(location)\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      try {\n        setLoading(true);\n\n        const results = await getMovieDetails(movieId);\n        console.log(results)\n\n        setMovie(results);\n\n        setGenres(results.genres);\n\n        setDate(results.release_date);\n      } catch ({ response }) {\n        setError(response.data.message);\n        toast.error(`ðŸ¦„ Sorry,${response.data.message}`);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMovie();\n  }, [movieId, setMovie, setLoading]);\n\n  const goBack = () => navigate(from);\n\n  const elements = genres.map(({ name, id }) => <li key={id}>{name}</li>);\n\n  const year = new Date(date).getFullYear();\n\n  return (\n    <>\n      <button type=\"button\" onClick={goBack} className={css.button}>\n        <MdKeyboardBackspace className={css.icon} /> Go back\n      </button>\n      {loading && <Loader />}\n      {error && <ToastContainer theme=\"colored\" />}\n      {movie && (\n        <div className={css.wrapper}>\n          <img\n            src={`https://image.tmdb.org/t/p/w300/${movie.poster_path}`}\n            alt={movie.original_title}\n            loading=\"lazy\"\n            className={css.img}\n            width=\"300px\"\n            height=\"450px\"\n          />\n          <div className={css.info}>\n            <h2 className={css.title}>\n              {movie.original_title}\n              <span> ({year})</span>\n            </h2>\n            <p>User score: {((movie.vote_average / 10) * 100).toFixed(0)}%</p>\n            <h3 className={css.topic}>Genres</h3>\n            <ul className={css.list}>{elements}</ul>\n            <h3 className={css.topic}>Overview</h3>\n            <p>{movie.overview}</p>\n          </div>\n        </div>\n      )}\n      <div className={css.wrapperLink}>\n        <button type=\"button\" className={css.buttonLink}>\n          {' '}\n          <Link\n            state={{ from }}\n            to={`/movies/${movieId}/cast`}\n            className={css.link}\n          >\n            Cast\n          </Link>\n        </button>\n        <button type=\"button\" className={css.buttonLink}>\n          <Link\n            state={{ from }}\n            to={`/movies/${movieId}/reviews`}\n            className={css.link}\n          >\n            Reviews\n          </Link>\n        </button>\n      </div>\n      <Outlet />\n    </>\n  );\n};\nexport default MovieDetailsPage;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'b73de80df2ed50327adfc0ab4da97097',\n  },\n});\n\nexport const filmsSearch = async (page = 1) => {\n  const { data } = await instance.get('/trending/movie/day?', {\n    params: {\n      page,\n    },\n  });\n  return data.results;\n};\n\nexport const getMovieDetails = async movie_id => {\n  const { data } = await instance.get(`/movie/${movie_id}?`);\n  return data;\n};\n\nexport const MovieSearch = async query => {\n  const { data } = await instance.get('/search/movie?', {\n    params: {\n      query,\n    },\n  });\n  return data.results;\n};\n\nexport const getMovieCast = async movie_id => {\n  const { data } = await instance.get(`/movie/${movie_id}/credits?`);\n  return data.cast;\n};\n\nexport const getReviews = async movie_id => {\n  const { data } = await instance.get(`/movie/${movie_id}//reviews?`);\n  return data.results;\n};\n"],"names":["useState","movie","setMovie","loading","setLoading","error","setError","genres","setGenres","date","setDate","movieId","useParams","navigate","useNavigate","from","useLocation","state","useEffect","fetchMovie","getMovieDetails","results","console","log","release_date","response","data","message","toast","elements","map","name","id","year","Date","getFullYear","type","onClick","className","css","Loader","theme","src","poster_path","alt","original_title","width","height","vote_average","toFixed","overview","to","instance","axios","baseURL","params","api_key","filmsSearch","page","get","movie_id","MovieSearch","query","getMovieCast","cast","getReviews"],"sourceRoot":""}