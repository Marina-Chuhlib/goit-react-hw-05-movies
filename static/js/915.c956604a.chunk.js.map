{"version":3,"file":"static/js/915.c956604a.chunk.js","mappings":"wMACA,EAAuB,yBAAvB,EAAuD,yBAAvD,EAAuF,yB,SCMjFA,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACdC,GAAWC,EAAAA,EAAAA,MAGXC,EAAWH,EAAOI,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAV,OAC1B,eAAaC,UAAWC,EAAxB,UACE,SAAC,KAAD,CACED,UAAWC,EACXC,MAAO,CAAEC,KAAMT,GACfU,GAAE,kBAAaL,GAHjB,SAKGD,KANIC,EADiB,IAY5B,OACE,+BACE,eAAIC,UAAWC,EAAf,SAA0BL,KAG/B,EAED,GAAeS,EAAAA,EAAAA,MAAKb,GAEpBA,EAAWc,aAAe,CACxBb,OAAQ,G,0KChCV,GAAiB,E,SC0CjB,EAhCuB,WACrB,OAA4Bc,EAAAA,EAAAA,UAAS,IAArC,eAAOd,EAAP,KAAee,EAAf,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KACA,GAA0BH,EAAAA,EAAAA,UAAS,MAAnC,eAAOI,EAAP,KAAcC,EAAd,KAoBA,OAlBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,sGAEhBJ,GAAW,GAFK,UAGMK,EAAAA,EAAAA,MAHN,OAGVC,EAHU,OAMhBR,EAAUQ,GANM,gDAOPC,EAPO,KAOPA,SACTL,EAASK,EAASC,KAAKC,SACvBC,EAAAA,GAAAA,MAAA,6BAAwBH,EAASC,KAAKC,UATtB,yBAWhBT,GAAW,GAXK,4EAAH,qDAcjBI,GACD,GAAE,CAACN,EAAWE,KAGb,iBAAKV,UAAWC,EAAAA,QAAhB,UACGQ,IAAW,SAACY,EAAA,EAAD,IACXV,IAAS,SAAC,KAAD,CAAgBW,MAAM,YAC/B7B,IAAU,SAACD,EAAA,EAAD,CAAYC,OAAQA,MAGpC,ECxCD,EAAwB,wBCWxB,EATiB,WACf,OACE,iCACE,eAAIO,UAAWC,EAAf,6BACA,SAAC,EAAD,MAGL,C,yLCRKsB,E,QAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAIAZ,EAAW,mCAAG,2GAAOa,EAAP,+BAAc,EAAd,SACFL,EAASM,IAAI,uBAAwB,CAC1DH,OAAQ,CACNE,KAAAA,KAHqB,uBACjBV,EADiB,EACjBA,KADiB,kBAMlBA,EAAKF,SANa,2CAAH,qDASXc,EAAe,mCAAG,WAAMC,GAAN,yFACNR,EAASM,IAAT,iBAAuBE,EAAvB,MADM,uBACrBb,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfc,EAAW,mCAAG,WAAMC,GAAN,yFACFV,EAASM,IAAI,iBAAkB,CACpDH,OAAQ,CACNO,MAAAA,KAHqB,uBACjBf,EADiB,EACjBA,KADiB,kBAMlBA,EAAKF,SANa,2CAAH,sDASXkB,EAAY,mCAAG,WAAMH,GAAN,yFACHR,EAASM,IAAT,iBAAuBE,EAAvB,cADG,uBAClBb,EADkB,EAClBA,KADkB,kBAEnBA,EAAKiB,MAFc,2CAAH,sDAKZC,EAAU,mCAAG,WAAML,GAAN,yFACDR,EAASM,IAAT,iBAAuBE,EAAvB,eADC,uBAChBb,EADgB,EAChBA,KADgB,kBAEjBA,EAAKF,SAFY,2CAAH,qD","sources":["webpack://goit-react-hw-05-movies/./src/modules/MoviesList/MoviesList.module.css?178d","modules/MoviesList/MoviesList.jsx","webpack://goit-react-hw-05-movies/./src/modules/TrendingMovies/TrendingMovies.module.css?6435","modules/TrendingMovies/TrendingMovies.jsx","webpack://goit-react-hw-05-movies/./src/pages/HomePage/HomePage.module.css?5baa","pages/HomePage/HomePage.jsx","shared/services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MoviesList_list__3SYjV\",\"item\":\"MoviesList_item__8iSkR\",\"link\":\"MoviesList_link__DLyzb\"};","import PropTypes from 'prop-types';\nimport { memo } from 'react';\n\nimport { Link, useLocation } from 'react-router-dom';\n\nimport css from './MoviesList.module.css';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  // console.log(location, \"MoviesList\" )\n\n  const elements = movies.map(({ title, id }) => (\n    <li key={id} className={css.item}>\n      <Link\n        className={css.link}\n        state={{ from: location }}\n        to={`/movies/${id}`}\n      >\n        {title}\n      </Link>\n    </li>\n  ));\n\n  return (\n    <>\n      <ul className={css.list}>{elements}</ul>\n    </>\n  );\n};\n\nexport default memo(MoviesList);\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n","// extracted by mini-css-extract-plugin\nexport default {};","import React, { useState, useEffect} from 'react';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport MoviesList from '../MoviesList/MoviesList';\nimport Loader from 'shared/components/Loader/Loader';\nimport { filmsSearch } from '../../shared/services/api';\n\nimport css from './TrendingMovies.module.css';\n\nconst TrendingMovies = () => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        setLoading(true);\n        const results = await filmsSearch();\n        // console.log(results);\n\n        setMovies(results);\n      } catch ({ response }) {\n        setError(response.data.message);\n        toast.error(`ðŸ¦„ Sorry,${response.data.message}`);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMovies();\n  }, [setMovies, setLoading]);\n\n  return (\n    <div className={css.wrapper}>\n      {loading && <Loader />}\n      {error && <ToastContainer theme=\"colored\" />}\n      {movies && <MoviesList movies={movies} />}\n    </div>\n  );\n};\n\nexport default TrendingMovies;\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"HomePage_title__UFLA3\"};","import TrendingMovies from '../../modules/TrendingMovies/TrendingMovies';\nimport css from './HomePage.module.css';\n\nconst HomePage = () => {\n  return (\n    <>\n      <h2 className={css.title}>Trending today</h2>\n      <TrendingMovies />\n    </>\n  );\n};\n\nexport default HomePage;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'b73de80df2ed50327adfc0ab4da97097',\n  },\n});\n\nexport const filmsSearch = async (page = 1) => {\n  const { data } = await instance.get('/trending/movie/day?', {\n    params: {\n      page,\n    },\n  });\n  return data.results;\n};\n\nexport const getMovieDetails = async movie_id => {\n  const { data } = await instance.get(`/movie/${movie_id}?`);\n  return data;\n};\n\nexport const MovieSearch = async query => {\n  const { data } = await instance.get('/search/movie?', {\n    params: {\n      query,\n    },\n  });\n  return data.results;\n};\n\nexport const getMovieCast = async movie_id => {\n  const { data } = await instance.get(`/movie/${movie_id}/credits?`);\n  return data.cast;\n};\n\nexport const getReviews = async movie_id => {\n  const { data } = await instance.get(`/movie/${movie_id}//reviews?`);\n  return data.results;\n};\n"],"names":["MoviesList","movies","location","useLocation","elements","map","title","id","className","css","state","from","to","memo","defaultProps","useState","setMovies","loading","setLoading","error","setError","useEffect","fetchMovies","filmsSearch","results","response","data","message","toast","Loader","theme","instance","axios","baseURL","params","api_key","page","get","getMovieDetails","movie_id","MovieSearch","query","getMovieCast","cast","getReviews"],"sourceRoot":""}