{"version":3,"file":"static/js/591.84976371.chunk.js","mappings":"iRACA,G,QAAA,CAAgB,KAAO,yB,SC2DvB,EAnDiB,WACf,OAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,sGAEdN,GAAW,GAFG,UAGQO,EAAAA,EAAAA,IAAaJ,GAHrB,OAGRK,EAHQ,OAKdV,EAAUU,GALI,gDAMLC,EANK,KAMLA,SACTP,EAASO,EAASC,KAAKC,SACvBC,EAAAA,GAAAA,MAAA,6BAAwBH,EAASC,KAAKC,UARxB,yBAUdX,GAAW,GAVG,4EAAH,qDAcfM,GACD,GAAE,CAACH,IAEJ,IAAMU,EAAUhB,EAAOiB,KAAI,gBAAGC,EAAH,EAAGA,cAAeC,EAAlB,EAAkBA,aAAcC,EAAhC,EAAgCA,GAAhC,OACzB,2BACE,gBACEC,IAAG,0CAAqCF,GACxCG,IAAKJ,EACLhB,QAAQ,OACRqB,UAAWC,EAAAA,IACXC,MAAM,QACNC,OAAO,WAET,wBAAKR,MATEE,EADgB,IAc3B,OACE,gCACGlB,IAAW,SAACyB,EAAA,EAAD,IACXvB,IAAS,SAAC,KAAD,CAAgBwB,MAAM,YAC/B5B,IACC,0BACE,eAAIuB,UAAWC,EAAAA,KAAf,SAA0BR,QAKnC,C,yLCxDKa,E,QAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAW,mCAAG,2GAAOC,EAAP,+BAAc,EAAd,SACFN,EAASO,IAAI,uBAAwB,CAC1DJ,OAAQ,CACNG,KAAAA,KAHqB,uBACjBtB,EADiB,EACjBA,KADiB,kBAMlBA,EAAKF,SANa,2CAAH,qDASX0B,EAAe,mCAAG,WAAMC,GAAN,yFACNT,EAASO,IAAT,iBAAuBE,EAAvB,MADM,uBACrBzB,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKf0B,EAAW,mCAAG,WAAMC,GAAN,yFACFX,EAASO,IAAI,iBAAkB,CACpDJ,OAAQ,CACNQ,MAAAA,KAHqB,uBACjB3B,EADiB,EACjBA,KADiB,kBAMlBA,EAAKF,SANa,2CAAH,sDASXD,EAAY,mCAAG,WAAM4B,GAAN,yFACHT,EAASO,IAAT,iBAAuBE,EAAvB,cADG,uBAClBzB,EADkB,EAClBA,KADkB,kBAEnBA,EAAK4B,MAFc,2CAAH,sDAKZC,EAAU,mCAAG,WAAMJ,GAAN,yFACDT,EAASO,IAAT,iBAAuBE,EAAvB,eADC,uBAChBzB,EADgB,EAChBA,KADgB,kBAEjBA,EAAKF,SAFY,2CAAH,qD","sources":["webpack://goit-react-hw-05-movies/./src/pages/CastPage/CastPage.module.css?d5ae","pages/CastPage/CastPage.jsx","shared/services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"CastPage_list__ievSZ\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCast } from 'shared/services/api';\nimport Loader from 'shared/components/Loader/Loader';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport css from './CastPage.module.css';\n\nconst CastPage = () => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        setLoading(true);\n        const results = await getMovieCast(movieId);\n\n        setMovies(results);\n      } catch ({ response }) {\n        setError(response.data.message);\n        toast.error(`ðŸ¦„ Sorry,${response.data.message}`);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchCast();\n  }, [movieId]);\n\n  const element = movies.map(({ original_name, profile_path, id }) => (\n    <li key={id}>\n      <img\n        src={`https://image.tmdb.org/t/p/w300/${profile_path}`}\n        alt={original_name}\n        loading=\"lazy\"\n        className={css.img}\n        width=\"100px\"\n        height=\"150px\"\n      />\n      <h3>{original_name}</h3>\n    </li>\n  ));\n\n  return (\n    <>\n      {loading && <Loader />}\n      {error && <ToastContainer theme=\"colored\" />}\n      {movies && (\n        <div>\n          <ul className={css.list}>{element}</ul>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default CastPage;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'b73de80df2ed50327adfc0ab4da97097',\n  },\n});\n\nexport const filmsSearch = async (page = 1) => {\n  const { data } = await instance.get('/trending/movie/day?', {\n    params: {\n      page,\n    },\n  });\n  return data.results;\n};\n\nexport const getMovieDetails = async movie_id => {\n  const { data } = await instance.get(`/movie/${movie_id}?`);\n  return data;\n};\n\nexport const MovieSearch = async query => {\n  const { data } = await instance.get('/search/movie?', {\n    params: {\n      query,\n    },\n  });\n  return data.results;\n};\n\nexport const getMovieCast = async movie_id => {\n  const { data } = await instance.get(`/movie/${movie_id}/credits?`);\n  return data.cast;\n};\n\nexport const getReviews = async movie_id => {\n  const { data } = await instance.get(`/movie/${movie_id}//reviews?`);\n  return data.results;\n};\n"],"names":["useState","movies","setMovies","loading","setLoading","error","setError","movieId","useParams","useEffect","fetchCast","getMovieCast","results","response","data","message","toast","element","map","original_name","profile_path","id","src","alt","className","css","width","height","Loader","theme","instance","axios","baseURL","params","api_key","filmsSearch","page","get","getMovieDetails","movie_id","MovieSearch","query","cast","getReviews"],"sourceRoot":""}